docker run -it --rm -v %cd%:/app -w /app -p 80:3000 -e PORT=3000 node /bin/bash

npm init -y

npm i express
npm i uuid
npm i multer
npm i ejs

npm install -D nodemon


    "start": "node index.js",
    "dev": "nodemon -L",

npm run start
npm run dev


// -----------------------------------
Пишем код и собираем image
// -----------------------------------
# . - это путь в файлу настроек сборки image, если файл называется стандартно "Dockerfile", то его название можно не писать
# --tag , -t   - имя image
docker build -t my_book .

// Запускаем image в фоновом режиме
docker run -d --rm -p 80:3000 -e PORT=3000 my_book


// Создаём репозиторий для нового образа    https://hub.docker.com/repository/create       aleman74

# Добавляем tag - связываем локальный образ с образом в хранилище (Docker Hub)
docker tag my_book:latest aleman74/my_book:1.0.0

# Выкладываем образ в хранилище
docker push aleman74/my_book:1.0.0

// -----------------------------------
Запускаем образ из глобального репозитория
// -----------------------------------
docker run -d --rm -p 80:3000 -e PORT=3000 aleman74/my_book:1.0.0
docker run -it --rm -p 80:3000 -e PORT=3000 aleman74/my_book:1.0.0

docker logs ...


// -----------------------------------
// docker-compose.yml
// -----------------------------------
Формируем docker-compose файл и запускаем сразу несколько образов.
docker-compose up
docker-compose down

# Для просмотра данных
docker volume ls


http://localhost/api/books
